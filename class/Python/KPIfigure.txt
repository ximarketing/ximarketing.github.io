import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle
import matplotlib.colors as mcolors
import colorsys

# Data for the waffle charts
data = {
    'KPI 1': 65,
    'KPI 2': 43,
    'KPI 3': 36
}

# Define the color for each KPI
colors = ['#76B041', '#FFA500', '#4682B4']

# Function to lighten a given color
def lighten_color(color, amount=0.5):
    try:
        c = mcolors.cnames[color]
    except:
        c = color
    c = colorsys.rgb_to_hls(*mcolors.to_rgb(c))
    return colorsys.hls_to_rgb(c[0], min(1, amount * c[1]), c[2])

# Function to create a single waffle chart
def create_waffle_chart(ax, value, color):
    total_tiles = 100
    filled_tiles = int(total_tiles * (value / 100))
    rows = 10
    cols = 10
    current_tile = 0

    lighter_color = lighten_color(color, 1.5)

    for row in range(rows):
        for col in range(cols):
            if current_tile < filled_tiles:
                ax.add_patch(Rectangle((col, row), 1, 1, edgecolor='black', facecolor=color))
            else:
                ax.add_patch(Rectangle((col, row), 1, 1, edgecolor='black', facecolor=lighter_color))
            current_tile += 1

    ax.set_xlim(0, cols)
    ax.set_ylim(0, rows)
    ax.set_aspect('equal')
    ax.axis('off')
    ax.text(5, 11, f'{value}%', horizontalalignment='center', verticalalignment='center', fontsize=20, fontweight='bold', color=color)

# Create subplots
fig, axes = plt.subplots(1, 3, figsize=(12, 4))

# Create each waffle chart
for ax, (kpi, value), color in zip(axes, data.items(), colors):
    create_waffle_chart(ax, value, color)
    ax.set_title(kpi, fontsize=14, fontweight='bold')

plt.tight_layout()
plt.show()